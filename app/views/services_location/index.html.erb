<h1>Find services</h1>
<div class="row">
<%= form_tag(services_location_path, method: "get", class: "form-inline") do %>
    <div class="form-group">
      <%= label_tag(:locationTextField, "Location") %>
      <%= text_field_tag :locationTextField, "", class: 'form-control', placeholder: 'hehe' %>
    </div>
    <div class="form-group ">
      <%= text_field_tag :searchInput, "", class: 'form-control', placeholder: 'Search for...' %>
      <%= submit_tag("Search", class: 'form-control') %>
    </div>
<% end %>
</div>
<div class="col-md-6">
      <table>
        <% if !params[:searchInput].nil?  %>
        <% @services.each do |service| %>
            <% if (service.service_type == params[:searchInput]) %>
                <tr>
                  <td>
                      <%= image_tag(service.img_url, size: "100x100") %>
                      <h4><%= service.name %></h4>

                      <h5>Service type: </h5><%= service.service_type %>
                      <%= service.description %>
                      <%= service.price %>

                  </td>
                </tr>
            <% end %>
        <% end %>
        <% end %>
      </table>
  </div>
    <div id="map" class="col-md-5"></div>
  <script>


    var services = new Array();
    <% @services.each do | service| %>
    <% if( service.service_type == params[:searchInput]) %>
    services.push({name: '<%=service.name %>', lat: <%= service.latitude %>, lng: <%= service.longitude %>});
    <% end %>
    <% end %>

    var marker, markers = [], map;

    function initMap() {
      var geocoder = new google.maps.Geocoder();
      var location = " <%= @location %>";

      map = new google.maps.Map(document.getElementById('map'), {
        zoom: 12
      });
      geocoder.geocode({'address': location}, function (results, status) {
        if (status == google.maps.GeocoderStatus.OK) {
          map.setCenter(results[0].geometry.location);
        } else {//handle a bad search with something nice for the customer
          map.setCenter(new google.maps.LatLng(53.3498053, -6.260309699999993));
        }
      });
      drop();
    }

    function drop() {
      clearMarkers();
      for (var i = 0; i < services.length; i++) {
        addMarkerWithTimeout(services[i], i * 200);
      }
    }

    function addMarkerWithTimeout(service, timeout) {
      var infowindow = new google.maps.InfoWindow();
      marker = new google.maps.Marker({
        name: service.name,
        position: {lat: service.lat, lng: service.lng},
        map: map,
        animation: google.maps.Animation.DROP
      });

      window.setTimeout(function () {
        markers.push(marker);
      }, timeout);

      google.maps.event.addListener(marker, 'click', (function (marker) {
        return function () {
          infowindow.setContent(marker.name);
          infowindow.open(map, marker);
        }
      })(marker));
    }

    function clearMarkers() {
      for (var i = 0; i < markers.length; i++) {
        markers[i].setMap(null);
      }
      markers = [];
    }


  </script>

  <script async defer
          src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCBnG1nz-0s--EBdSX-o9q3ntkxkQDCKVc&callback=initMap">
  </script>