<h1>ServicesLocation</h1>
<div class="row">
  <p><%=@location %></p>
  <p><%= @searchInput %></p>
<div id="map" class="pull-right"></div>
</div>
<script>


var neighborhoods = new Array();
<% @services.each do | service| %>
  <% if( service.service_type == params[:searchInput]) %>
  neighborhoods.push( {name: '<%=service.name %>', lat: <%= service.latitude %>, lng: <%= service.longitude %>});
  <% end %>
<% end %>

var marker, markers = [], map;

function initMap() {
  var geocoder = new google.maps.Geocoder();
  var location = " <%= @location %>";

  map = new google.maps.Map(document.getElementById('map'), {
    zoom: 12
  });
  geocoder.geocode( { 'address': location }, function(results, status) {
    if (status == google.maps.GeocoderStatus.OK) {
      map.setCenter(results[0].geometry.location);
    } else {//handle a bad search with something nice for the customer
      map.setCenter(new google.maps.LatLng(53.3498053, -6.260309699999993));
    }
  });
  drop();
}

function drop() {
  clearMarkers();
  for (var i = 0; i < neighborhoods.length; i++) {
    addMarkerWithTimeout(neighborhoods[i], i * 200);
  }
}

function addMarkerWithTimeout(service, timeout) {
  var infowindow = new google.maps.InfoWindow();
  marker = new google.maps.Marker({
    name: service.name,
    position: {lat: service.lat, lng: service.lng},
    map: map,
    animation: google.maps.Animation.DROP
  });

  window.setTimeout(function() {
    markers.push(marker);
  }, timeout);

  google.maps.event.addListener(marker, 'click', (function(marker) {
    return function() {
      infowindow.setContent(marker.name);
      infowindow.open(map, marker);
    }
  })(marker));
}

function clearMarkers() {
  for (var i = 0; i < markers.length; i++) {
    markers[i].setMap(null);
  }
  markers = [];
}


</script>

<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCBnG1nz-0s--EBdSX-o9q3ntkxkQDCKVc&callback=initMap">
</script>